//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerInputMapping.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputMapping : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputMapping()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputMapping"",
    ""maps"": [
        {
            ""name"": ""Navigation"",
            ""id"": ""93642528-a1db-4b11-b0a0-a037e8ec04b3"",
            ""actions"": [
                {
                    ""name"": ""Rotate_Player"",
                    ""type"": ""Value"",
                    ""id"": ""4dd6ec75-7326-424b-a3fd-493303dd836b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate_Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""98edcb91-c42e-42e5-a373-389eb1fcd626"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom_Player"",
                    ""type"": ""Value"",
                    ""id"": ""459f330c-6466-415e-9f59-a46728be1cdb"",
                    ""expectedControlType"": ""Double"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click_Player"",
                    ""type"": ""Button"",
                    ""id"": ""c08e1ed5-96d2-4ac9-aed5-20d74594d86d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FullScreen"",
                    ""type"": ""Button"",
                    ""id"": ""682c16a1-b3ca-43e5-a7a9-4628053f1e0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SetPosition"",
                    ""type"": ""Value"",
                    ""id"": ""be88d68f-ccbe-4a79-a860-286eb6f1dc57"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PinchZoomPos1"",
                    ""type"": ""Value"",
                    ""id"": ""bca035ab-c8d3-4bc4-8c38-0fd7404b819d"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PinchZoomPos2"",
                    ""type"": ""Value"",
                    ""id"": ""2cac5429-c27d-4bda-8bf8-388c8ca92abc"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2b67a386-205c-4f4a-8a80-0057b22d4ef5"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""Rotate_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""872cc49a-f1ca-4f9e-86d8-9206488b72f7"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""TouchScreen"",
                    ""action"": ""Rotate_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eaf7dd45-8e55-4bda-9b6f-1a294fc9e1b6"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""Rotate_Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a717d9b9-a6e8-4910-8963-e81536fc802d"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""TouchScreen"",
                    ""action"": ""Rotate_Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6a6487c-722d-49b6-9345-efafe49b9966"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""Click_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f826938-f357-473c-acbe-321c101eb139"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""TouchScreen"",
                    ""action"": ""Click_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""408b8676-839f-4577-84af-9b4e7c777b8d"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""Zoom_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc150f57-c1c8-4966-bdfe-2f44f22ad732"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""SetPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb1817ac-30c0-4a3e-a6be-e5c54e42da1a"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""TouchScreen"",
                    ""action"": ""SetPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Two Modifiers"",
                    ""id"": ""6a9381da-b51b-4f03-8ac3-62cbba64da6f"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PinchZoomPos1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02c3c0b7-901b-402c-afe9-0edb5e6cc695"",
                    ""path"": ""<Touchscreen>/touch0"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""TouchScreen"",
                    ""action"": ""PinchZoomPos1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11fb3966-4231-42bd-a49b-b8d114356aa9"",
                    ""path"": ""<Touchscreen>/touch1"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": ""TouchScreen"",
                    ""action"": ""PinchZoomPos2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Two Modifiers"",
                    ""id"": ""3c7ace31-1028-4bbc-b141-3de7e5617462"",
                    ""path"": ""TwoModifiers"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""TouchScreen"",
                    ""action"": ""PinchZoomPos2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f52a5be-621b-433f-8901-b9d5ed4eeeb5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""Mouse"",
                    ""action"": ""FullScreen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd3104e2-ffa8-4ab3-97bd-2320e6a98d85"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": ""TouchScreen"",
                    ""action"": ""FullScreen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Mouse"",
            ""bindingGroup"": ""Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""TouchScreen"",
            ""bindingGroup"": ""TouchScreen"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Navigation
        m_Navigation = asset.FindActionMap("Navigation", throwIfNotFound: true);
        m_Navigation_Rotate_Player = m_Navigation.FindAction("Rotate_Player", throwIfNotFound: true);
        m_Navigation_Rotate_Toggle = m_Navigation.FindAction("Rotate_Toggle", throwIfNotFound: true);
        m_Navigation_Zoom_Player = m_Navigation.FindAction("Zoom_Player", throwIfNotFound: true);
        m_Navigation_Click_Player = m_Navigation.FindAction("Click_Player", throwIfNotFound: true);
        m_Navigation_FullScreen = m_Navigation.FindAction("FullScreen", throwIfNotFound: true);
        m_Navigation_SetPosition = m_Navigation.FindAction("SetPosition", throwIfNotFound: true);
        m_Navigation_PinchZoomPos1 = m_Navigation.FindAction("PinchZoomPos1", throwIfNotFound: true);
        m_Navigation_PinchZoomPos2 = m_Navigation.FindAction("PinchZoomPos2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Navigation
    private readonly InputActionMap m_Navigation;
    private INavigationActions m_NavigationActionsCallbackInterface;
    private readonly InputAction m_Navigation_Rotate_Player;
    private readonly InputAction m_Navigation_Rotate_Toggle;
    private readonly InputAction m_Navigation_Zoom_Player;
    private readonly InputAction m_Navigation_Click_Player;
    private readonly InputAction m_Navigation_FullScreen;
    private readonly InputAction m_Navigation_SetPosition;
    private readonly InputAction m_Navigation_PinchZoomPos1;
    private readonly InputAction m_Navigation_PinchZoomPos2;
    public struct NavigationActions
    {
        private @PlayerInputMapping m_Wrapper;
        public NavigationActions(@PlayerInputMapping wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotate_Player => m_Wrapper.m_Navigation_Rotate_Player;
        public InputAction @Rotate_Toggle => m_Wrapper.m_Navigation_Rotate_Toggle;
        public InputAction @Zoom_Player => m_Wrapper.m_Navigation_Zoom_Player;
        public InputAction @Click_Player => m_Wrapper.m_Navigation_Click_Player;
        public InputAction @FullScreen => m_Wrapper.m_Navigation_FullScreen;
        public InputAction @SetPosition => m_Wrapper.m_Navigation_SetPosition;
        public InputAction @PinchZoomPos1 => m_Wrapper.m_Navigation_PinchZoomPos1;
        public InputAction @PinchZoomPos2 => m_Wrapper.m_Navigation_PinchZoomPos2;
        public InputActionMap Get() { return m_Wrapper.m_Navigation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NavigationActions set) { return set.Get(); }
        public void SetCallbacks(INavigationActions instance)
        {
            if (m_Wrapper.m_NavigationActionsCallbackInterface != null)
            {
                @Rotate_Player.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnRotate_Player;
                @Rotate_Player.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnRotate_Player;
                @Rotate_Player.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnRotate_Player;
                @Rotate_Toggle.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnRotate_Toggle;
                @Rotate_Toggle.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnRotate_Toggle;
                @Rotate_Toggle.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnRotate_Toggle;
                @Zoom_Player.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnZoom_Player;
                @Zoom_Player.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnZoom_Player;
                @Zoom_Player.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnZoom_Player;
                @Click_Player.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnClick_Player;
                @Click_Player.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnClick_Player;
                @Click_Player.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnClick_Player;
                @FullScreen.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnFullScreen;
                @FullScreen.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnFullScreen;
                @FullScreen.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnFullScreen;
                @SetPosition.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnSetPosition;
                @SetPosition.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnSetPosition;
                @SetPosition.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnSetPosition;
                @PinchZoomPos1.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnPinchZoomPos1;
                @PinchZoomPos1.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnPinchZoomPos1;
                @PinchZoomPos1.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnPinchZoomPos1;
                @PinchZoomPos2.started -= m_Wrapper.m_NavigationActionsCallbackInterface.OnPinchZoomPos2;
                @PinchZoomPos2.performed -= m_Wrapper.m_NavigationActionsCallbackInterface.OnPinchZoomPos2;
                @PinchZoomPos2.canceled -= m_Wrapper.m_NavigationActionsCallbackInterface.OnPinchZoomPos2;
            }
            m_Wrapper.m_NavigationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Rotate_Player.started += instance.OnRotate_Player;
                @Rotate_Player.performed += instance.OnRotate_Player;
                @Rotate_Player.canceled += instance.OnRotate_Player;
                @Rotate_Toggle.started += instance.OnRotate_Toggle;
                @Rotate_Toggle.performed += instance.OnRotate_Toggle;
                @Rotate_Toggle.canceled += instance.OnRotate_Toggle;
                @Zoom_Player.started += instance.OnZoom_Player;
                @Zoom_Player.performed += instance.OnZoom_Player;
                @Zoom_Player.canceled += instance.OnZoom_Player;
                @Click_Player.started += instance.OnClick_Player;
                @Click_Player.performed += instance.OnClick_Player;
                @Click_Player.canceled += instance.OnClick_Player;
                @FullScreen.started += instance.OnFullScreen;
                @FullScreen.performed += instance.OnFullScreen;
                @FullScreen.canceled += instance.OnFullScreen;
                @SetPosition.started += instance.OnSetPosition;
                @SetPosition.performed += instance.OnSetPosition;
                @SetPosition.canceled += instance.OnSetPosition;
                @PinchZoomPos1.started += instance.OnPinchZoomPos1;
                @PinchZoomPos1.performed += instance.OnPinchZoomPos1;
                @PinchZoomPos1.canceled += instance.OnPinchZoomPos1;
                @PinchZoomPos2.started += instance.OnPinchZoomPos2;
                @PinchZoomPos2.performed += instance.OnPinchZoomPos2;
                @PinchZoomPos2.canceled += instance.OnPinchZoomPos2;
            }
        }
    }
    public NavigationActions @Navigation => new NavigationActions(this);
    private int m_MouseSchemeIndex = -1;
    public InputControlScheme MouseScheme
    {
        get
        {
            if (m_MouseSchemeIndex == -1) m_MouseSchemeIndex = asset.FindControlSchemeIndex("Mouse");
            return asset.controlSchemes[m_MouseSchemeIndex];
        }
    }
    private int m_TouchScreenSchemeIndex = -1;
    public InputControlScheme TouchScreenScheme
    {
        get
        {
            if (m_TouchScreenSchemeIndex == -1) m_TouchScreenSchemeIndex = asset.FindControlSchemeIndex("TouchScreen");
            return asset.controlSchemes[m_TouchScreenSchemeIndex];
        }
    }
    public interface INavigationActions
    {
        void OnRotate_Player(InputAction.CallbackContext context);
        void OnRotate_Toggle(InputAction.CallbackContext context);
        void OnZoom_Player(InputAction.CallbackContext context);
        void OnClick_Player(InputAction.CallbackContext context);
        void OnFullScreen(InputAction.CallbackContext context);
        void OnSetPosition(InputAction.CallbackContext context);
        void OnPinchZoomPos1(InputAction.CallbackContext context);
        void OnPinchZoomPos2(InputAction.CallbackContext context);
    }
}
